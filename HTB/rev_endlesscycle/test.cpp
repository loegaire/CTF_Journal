#include <iostream>
#include <fstream>
#include <cstdlib>
#include <cstdint>

using namespace std;

// Given seed value from the binary
#define SEED 0xCFD2BC5B

// Extracted `dword_4040` values (158 values total)
uint32_t dword_4040[158] = {
    0x0C, 0x70, 0x27, 0xE8, 0x8E, 0x55, 0x20, 0x2A1, 0x39, 0x21,
    0x70, 0x32E, 0x167, 0x251, 0xF3, 0x1E9, 0x328, 0x5D, 0x1A2, 0x2E6,
    0x49, 0x7C, 0x177, 0x61, 0xF9, 0x1A, 0x1CB, 0x150, 0x4A, 0x38,
    0xB9, 0x2A, 0xF5, 0xC4, 0x0E, 0x15D, 0x12, 0x8F, 0x10, 0x17C,
    0x46, 0x07, 0x05, 0x2BF, 0x09, 0x340, 0xBF, 0x69, 0x178, 0x19A,
    0x58, 0x299, 0x37, 0x6A, 0x163, 0x41, 0x10E, 0x29, 0x36, 0x22F,
    0x69, 0x08, 0x63, 0xC6, 0xEE, 0xFC, 0x3B, 0x5B, 0x21, 0x24,
    0x9B, 0x42, 0xBA, 0xC1, 0x46, 0x266, 0x1DC, 0x4D, 0x06, 0x23,
    0x00, 0x123, 0x2C, 0x42, 0x116, 0xD3, 0xED, 0xD6, 0x9F, 0x15,
    0xA2, 0xE9, 0x253, 0x47, 0x305, 0x124, 0x244, 0x58, 0xBE, 0x1B,
    0x1B1, 0x1B, 0x45, 0x27, 0xCD, 0x6C, 0x97, 0x2E7, 0x3D7, 0xEE,
    0x576, 0x73, 0x10F, 0x1C5, 0x7F, 0xA6, 0xC5, 0x35C, 0x20F, 0x23,
    0x14E, 0xF1, 0x104, 0x1FE, 0x0F, 0x67, 0x233, 0xFD, 0x104, 0x94,
    0x1C4, 0xF0, 0x8C, 0x2B, 0x96, 0x14, 0xC8, 0xDE, 0x1DC, 0x00,
    0x137, 0x61, 0x16, 0x57, 0x266, 0x44D, 0x183, 0x22, 0x20, 0xD6,
    0x16A, 0x2B, 0x154, 0xA5, 0xA4, 0x12A, 0x13F, 0x2E2
};

int main() {
    uint8_t shellcode[158];

    srand(SEED); // Set the seed

    for (int i = 0; i < 158; i++) {
        // Skip `dword_4040[i]` random numbers
        for (uint32_t j = 0; j < dword_4040[i]; j++) {
            rand();
        }
        // Store a random byte in shellcode
        shellcode[i] = rand() & 0xFF; // Only keep the lower byte
    }

    // Save the shellcode to a binary file
    ofstream outfile("shellcode.bin", ios::binary);
    outfile.write((char*)shellcode, 158);
    outfile.close();

    // Print shellcode in hex
    cout << "Shellcode: ";
    for (int i = 0; i < 158; i++) {
        printf("\\x%02X", shellcode[i]);
    }
    cout << endl;

    return 0;
}
